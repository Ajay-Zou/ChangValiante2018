close all
clear all
clc

%% Enter data to make comparison using the Two-sample Kolmogorov-Smirnov test to see if seizures changed power after drug application 

    excel_filename = '13226009.xlsx'    % Enter the excel file name
    
%% Load .abf file
                                            
[FileName,PathName] = uigetfile ('*.abf','pick .abf file',...
    'F:');%Choose abf file
[x,si,metadata]=abfload ([PathName FileName]); %Load the file name with x holding the channel data(10,000 sampling frequency) -> Convert index to
                                               %time value by dividing 10k
                                               
%% create time vector
fs = 1000000/si; %Hz si is the sampling interval in microseconds from the metadata
t = (0: (length(x)-1))/fs;

%% Seperate .abf file signals into independent signals
LFP = x(:,1); 
LED = x(:,2);  %%To be used if you need to collect LED data in the future' switch column 1 to 2
                                                        
%% Find the time when light pulses are for original (Undecimated) data

[P] = pulse_seq(LED);
light_pulse_onset_original=P.range(:,1); % 1s = 10000 pts
light_pulse_offset_original=P.range(:,2); % 1s = 10000 pts


%% import excel theta values

%import excel times to create vectors
SLE_onset_raw= xlsread(excel_filename,1,'C2:C50');
SLE_offset_raw= xlsread(excel_filename,1,'D2:D50');
duration_raw = xlsread(excel_filename,1,'E2:E50');
onset_delay = xlsread(excel_filename,1,'B2:B50');

%Finding Baseline onset and offset times
baseline_onset_raw = SLE_onset_raw - duration_raw;


%% decimate the data

LFP_d=decimate(LFP,100);
LED_d=decimate(LED,100);
fs_d=100;    % this is the fs, decimated appropriately; fs_d = 10000/100 = 100

t_d = ((0: (length(LFP_d)-1))/fs_d)/1.010097661;        %This is the code Taufik suggested
                                                        %I've also corrected the time 1.010097661(factor time is off by)

%% Convert seconds to corresponds with the decimated data points (LFP)
SLE_onset=round(SLE_onset_raw*100);   
SLE_offset=round(SLE_offset_raw*100);
baseline_onset=round(baseline_onset_raw*100);
%%baseline_offset=SLE_onset

%% plot graph of normalized decimated data 
figure;
set(gcf,'NumberTitle','off'); %don't show the figure number
set(gcf,'Name','Overview of Decimated Data'); %select the name you want
%plot (t_d, LFP_d, 'k');

locate_lightpulse = diff(LED_d) > 1;
LFP_d_norm = LFP_d-LFP(1);
lightpulse = locate_lightpulse/5 - abs( min(LFP_d_norm));

plot (t_d, LFP_d_norm, 'k')
hold on
plot (t_d(1:numel(t_d)-1),lightpulse)

plot (t_d (SLE_onset), LFP_d_norm(SLE_onset), 'g*')
plot (t_d (SLE_offset), LFP_d_norm(SLE_offset), 'r*')

title ('Overview of decimated (100) LFP recording');
ylabel ('LFP (mV)');
xlabel ('time (s)');

%% Creating powerpoint slide

isOpen  = exportToPPTX();
if ~isempty(isOpen),
    % If PowerPoint already started, then close first and then open a new one
    exportToPPTX('close');
end

exportToPPTX('new','Dimensions',[12 6], ...
    'Title','Example Presentation', ...
    'Author','Michael Chang', ...
    'Subject','Automatically generated PPTX file', ...
    'Comments','This file has been automatically generated by exportToPPTX');

exportToPPTX('addslide');
exportToPPTX('addtext', 'Ictal Event Characteristics versus Baseline', 'Position',[2 1 8 2],...
             'Horiz','center', 'Vert','middle', 'FontSize', 36);
exportToPPTX('addtext', sprintf('File: %s', excel_filename), 'Position',[3 3 6 2],...
             'Horiz','center', 'Vert','middle', 'FontSize', 20);
exportToPPTX('addtext', 'By: Michael Chang and Christopher Lucasius', 'Position',[4 4 4 2],...
             'Horiz','center', 'Vert','middle', 'FontSize', 20);     
         
exportToPPTX('addslide');
exportToPPTX('addtext', 'Legend', 'Position',[0 0 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'Normalized Line Length: the Arc (line) length of event divided by its duration', 'Position',[0 1 6 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
exportToPPTX('addtext', 'Normalized Point Distance: The difference between all the successive y-values divided by duration of event', 'Position',[0 2 5 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
exportToPPTX('addtext', 'Duration: Duration of the event', 'Position',[0 3 5 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
exportToPPTX('addtext', 'Peak-to-Peak Amplitude: the difference between the local maxima and minima of the event (amplitude of PS and DC shift)', 'Position',[0 4 5 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
exportToPPTX('addtext', 'Note: The event have only been shifted alone the y-axis to start at position 0', 'Position',[0 5 5 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 16);      

         
%% Convert seconds to corresponds with the original data points (LFP)
SLE_onset=round(SLE_onset_raw*10000);   
SLE_offset=round(SLE_offset_raw*10000);
baseline_onset=round(baseline_onset_raw*10000);
%%baseline_offset=SLE_onset


%%Testing

fsamp = 10000;
xx = LFP(SLE_onset(2):SLE_offset(2));
tt = t(SLE_onset(2):SLE_offset(2));
 
% Plot time-domain signal
subplot(2,1,1);
plot(tt, xx);
ylabel('Amplitude'); xlabel('Time (secs)');
axis tight;
title('Noisy Input Signal');

% Choose FFT size and calculate spectrum
Nfft = 1024;
[Pxx,f] = pwelch(xx,gausswin(Nfft),Nfft/2,Nfft,fsamp);

% Plot frequency spectrum
subplot(2,1,2);
plot(f,Pxx);
ylabel('PSD'); xlabel('Frequency (Hz)');
grid on;

% Get frequency estimate (spectral peak)
[~,loc] = max(Pxx);
FREQ_ESTIMATE = f(loc)
title(['Frequency estimate = ',num2str(FREQ_ESTIMATE),' Hz']);

%% Creating vectors of decimated data events (and ultimate For-Loop)

%Preallocating 
preictal_spikes = zeros(numel(SLE_onset),125);
DC_shift = zeros(numel(SLE_onset),1);
point_distance=zeros(numel(SLE_onset),2);
normalized_point_distance=zeros(numel(SLE_onset),1);
normalized_point_distance_baseline=zeros(numel(SLE_onset),1);
normalized_line_length=zeros(numel(SLE_onset),1);
normalized_line_length_baseline=zeros(numel(SLE_onset),1);
ps_amplitude=zeros(numel(SLE_onset),1);
baseline_amplitude=zeros(numel(SLE_onset),1);
ictal_event_amplitude=zeros(numel(SLE_onset),1);

for i=control(1):numel(SLE_onset)
    clear y0_d x0_dd y1_d x1_dd control_distance_between_points ictal_event_distance_between_points n nb n2 nb2 light0_d light1_d
        %Control vector
        y0_d = LFP_d (baseline_onset(i):SLE_onset(i));  % y0_d is the (decimated) baseline control LFP vector
        x0_dd = t_d (baseline_onset(i):SLE_onset(i));   % x0_dd is the (decimated) baseline control time vector
        %light0_d = LED_d (baseline_onset(i):SLE_onset(i));   %light0_d is the decimated LED vector incase you need to use it in the future
        
        %Ictal Event vector
        y1_d = LFP_d (SLE_onset(i):SLE_offset(i)); % y1_d is the decimated ictal event LFP vector                
        x1_dd = t_d (SLE_onset(i):SLE_offset(i)); % x1_dd is the decimated ictal event time vector
        %light1_d = LED_d (SLE_onset(i):SLE_offset(i));    %light1_d is the decimated LED vector incase you need to use it in the future
        
        %Preictal Spike vector
        ps = LFP_d (SLE_onset(i):SLE_onset(i)+124); % y1_d is the decimated ictal event LFP vector                
        ps_t = t_d (SLE_onset(i):SLE_onset(i))+124; % x1_dd is the decimated ictal event time vector
        %light1_d = LED_d (SLE_onset(i):SLE_onset(i)+100);    %light1_d is the decimated LED vector incase you need to use it in the future
      
        % "Storing PS vectors and making figure of average waveform"
        ps_normalized=ps-ps(1);
        preictal_spikes(i,:)=ps_normalized;
        avg_waveform_PS = mean (preictal_spikes);
        
        
        % Transpose vector
        x0_d = x0_dd';              %x0_d is x1_dd, transposed. It is the baseline time vector
        x1_d = x1_dd';             %x1_dd does not need transposing 
               
%% Calculating total vertical distance between data points

        %Transpose vectors

        A=transpose (y0_d);     %A is the baseline vector, transposed
        B=transpose (y1_d);     %B is the ictal event vector, transposed

        %Control 
        control_distance_between_points = sum(abs(diff(A)));
                
        %Ictal Event
        ictal_event_distance_between_points = sum(abs(diff(B)));
        
  point_distance(i,1)= control_distance_between_points;
  point_distance(i,2)= ictal_event_distance_between_points;
  
  %% Calculating Arc (Line) Length of decimated data - Form of pythagorean theorem

        %x and y are vectors containing the coordinates of the points 
        %     (in order) between the start and end points
        
        % Control baseline
        dx0_d = diff(x0_d);  %incremental difference between x coordinates
        dy0_d = diff(y0_d);  %incremental difference between y coordinates
        dL0_d = sqrt(dx0_d.^2+dy0_d.^2);  %length of each segment
        control_line_length = sum(dL0_d);    %total line length
        
        % Ictal Event 
        dx_d = diff(x1_d);  %incremental difference between x coordinates
        dy_d = diff(y1_d);  %incremental difference between y coordinates
        dL_d = sqrt(dx_d.^2+dy_d.^2);  %length of each segment
        ictal_event_line_length = sum(dL_d);    %total line length
  
  line_length(i,1)= control_line_length;
  line_length(i,2)= ictal_event_line_length;

  
%% See if DC Shift occurred
  
if any(2*abs(max (ps) - ps (1))>abs(ps(1) - min (ps)))
    DCshift = 0; %Not at onset
else
    DCshift = 1; %occured at onset
end

DC_shift(i,1) = DCshift;

% to be plotted on figures
if any(2*abs(max (ps) - ps (1))>abs(ps(1) - min (ps)))
    DCShift = 'No'; %Not at onset
else
    DCShift = 'Yes'; %occured at onset
end


%% Calculating amplitude of Pre-Ictal Spike

preictal_spike_amplitude = max(ps)-ps(1);
ps_amplitude(i,1) = preictal_spike_amplitude;

%% Calculating peak-to-peak amplitude

peak_to_peak_amplitude_baseline = max(y0_d)-min(y0_d);
baseline_amplitude(i,1)= peak_to_peak_amplitude_baseline;

peak_to_peak_amplitude_ictal_event = max(y1_d)-min(y1_d);
ictal_event_amplitude(i,1) = peak_to_peak_amplitude_ictal_event;
  
%% Calculating the normalized point distance of ictal events

n=point_distance(i,2)/duration_raw(i,1);
normalized_point_distance(i,1)= n;
  
%% Calculating the normalized point distance of baseline

   nb=point_distance(i,1)/duration_raw(i,1);
   normalized_point_distance_baseline(i,1)= nb;

%% Calculating the normalized line length of ictal events

  n2=line_length(i,2)/duration_raw(i,1);
  normalized_line_length(i,1)= n2;
  
%% Calculating the normalized line length of baseline

  nb2=line_length(i,1)/duration_raw(i,1); 
  normalized_line_length_baseline(i,1)= nb2;
  
%% Ploting graphs
  
  %%Making normalized vectors so the baseline goes to zero
  
  baseline_vector = (y0_d)-y0_d(1);
  ictal_event_vector = (y1_d)-y1_d(1);
    
  figHandle=figure;
  set(gcf, 'Position', get(0,'Screensize')); % Maximize figure.
  set(gcf,'NumberTitle','on') %don't show the figure number
  set(gcf,'Name', 'Ictal Event') %select the name you want

  subplot (2,2,1)
  plot (x0_dd, baseline_vector)
  ylim ([-1.5,1.5]);
  set(gca,'FontSize',12)
  title (sprintf('Baseline %.0f', i))
  xlabel('Time (s)')
  ylabel('LFP (mV)')
  
  subplot (2,2,2)
  set(gca,'xtick',[],'ytick',[],'layer','bottom','box','on')
  text(.1,0.9,sprintf('Normalized Line Length: %.2f mV/s', normalized_line_length_baseline(i)), 'Color', 'blue', 'FontSize', 12)
  text(.1,0.7,sprintf('Normalized point distance: %.2f pts/s', normalized_point_distance_baseline(i)), 'Color', 'blue', 'FontSize', 12)
  text(.1,0.5,sprintf('Duration: %.2f s', duration_raw(i)), 'Color', 'blue', 'FontSize', 12) 
  text(.1,0.3,sprintf('Peak-to-Peak Amplitude %.5f mV', peak_to_peak_amplitude_baseline), 'Color', 'blue', 'FontSize', 12)
  
  subplot (2,2,3)
  plot (x1_dd, ictal_event_vector, 'k')
  ylim ([-1.5,1.5]);
  set(gca,'FontSize',12)
  title (sprintf('Ictal Event %.0f', i))
  xlabel('Time (s)')
  ylabel('LFP (mV)')
    
  subplot (2,2,4)
  set(gca,'xtick',[],'ytick',[],'layer','bottom','box','on')
  text(.1,0.9,sprintf('Normalized Line Length %.2f mV/s', normalized_line_length(i)), 'Color', 'black', 'FontSize', 12)
  text(.1,0.7,sprintf('Normalized point distance %.2f pts/s', normalized_point_distance(i)), 'Color', 'black', 'FontSize', 12)
  text(.1,0.5,sprintf('DC Shift at onset: %s', DCShift), 'Color', 'black', 'FontSize', 12) 
  text(.1,0.3,sprintf('Preictal Spike Amplitude %.5f mV', preictal_spike_amplitude), 'Color', 'black', 'FontSize', 12)
  text(.1,0.1,sprintf('Peak-to-Peak Amplitude %.5f mV', peak_to_peak_amplitude_ictal_event), 'Color', 'black', 'FontSize', 12)

   
  exportToPPTX('addslide'); %Draw seizure figure on new powerpoint slide
  exportToPPTX('addpicture',figHandle);      
  close(figHandle)
end


%% Part II: Creating vectors of Light Response and Light Pulse in original (undecimated) data (For-Loop)

%Select which lightpulses to use to make average waveform figure
control_pulses = round(SLE_onset_raw(control(1))/Interstimulus_Interval):round(SLE_onset_raw(control(end))/Interstimulus_Interval);
drug_pulses = round(SLE_onset_raw(drug(1))/Interstimulus_Interval):round(SLE_onset_raw(drug(end))/Interstimulus_Interval);
collective_pulses = drug_pulses; %this data will be posted to excel sheets

%Proallocating the data
light_response_original=zeros(numel(light_pulse_offset_original),5000);
light_response_onset_original=zeros(numel(light_pulse_offset_original),5000);
light_pulse_original=zeros(numel(light_pulse_offset_original),5000);
light_response_amplitude=zeros(numel(light_pulse_offset_original),1);

for i = 1:numel(light_pulse_offset_original)-1
        
    %% Create vectors (0.5 s) of the Light Response and Light Pulse from undecimated Data

    LR = LFP (light_pulse_offset_original(i):light_pulse_offset_original(i)+4999); %response 2.5s after each light pulse
    LR_normalized = LR-LR(1);
    light_response_original (i,:) = LR_normalized;

    LR_onset = LFP (light_pulse_onset_original(i):light_pulse_onset_original(i)+4999); %response 2.5s after each light pulse
    LR_onset_normalized = LR_onset-LR_onset(1);
    light_response_onset_original (i,:) = LR_onset_normalized;
    
    %vector of light pulse from pulse onset
    lightpulses = LED (light_pulse_onset_original(i):light_pulse_onset_original(i)+4999); %response 2.5s after each light pulse
    light_pulse_original(i,:) = lightpulses;
        
        
    %% Calculating amplitude of light response 

    LR_amplitude = (max(LR_normalized)-LR_normalized(1))-(LR_normalized(1)-min(LR_normalized));   %to account for negative light response
    light_response_amplitude(i,1) = LR_amplitude;

end


%% Part III: Performing the statistical Analysis

    % Wilcoxin signed-rank test (nonparametric pairwise comparison) to confirm serizures increase in power vs baseline
    [p_wilcoxin,h_wilcoxin] = signrank (point_distance(:,1),point_distance(:,2)); %if p<0.05 reject null hypothesis that median = 0

    %Collective analysis also performed in control studies, where both control ictal events and drug ictal events are considered collectively
    %collective = drug;
    n_collective = numel (collective);
    n_control = numel(control);
    n_drug = numel(drug);
    n_isi_control=n_control-1;
    n_isi_drug=n_drug-1; 
    

%% Normalized Point Distance of Ictal Events

    % Comparing normalized point distance of Ictal Events (with Two-sample Kolmogorov-Smirnov test (to see if two independent samples are from the same population))
    [h_KS_normalized,p_KS_normalized] = kstest2(normalized_point_distance(control),normalized_point_distance(drug));

    % Average normalized point distance of Ictal Events
    mean_normalized_control = mean (normalized_point_distance (control));    
    mean_normalized_drug = mean (normalized_point_distance (drug));
    mean_normalized_collective = mean (normalized_point_distance (collective));
    

%% Normalized Line Length of Seizures (the time vector is incorrect in this version)

    % Comparing normalized line length of seizures (with Two-sample Kolmogorov-Smirnov test (to see if two independent samples are from the same population))
    [h_KS_normalized_line_length,p_KS_normalized_line_length] = kstest2(normalized_line_length(control),normalized_line_length(drug));

    % Average normalized line length of Ictal Events
    mean_normalized_line_length_control = mean (normalized_line_length (control));
    mean_normalized_line_length_drug = mean (normalized_line_length (drug));
    
    mean_line_length_collective = mean (normalized_line_length (collective));

%% Amplitude of Preictal Spike preceeding Ictal Events
    
    % Comparing preictal spike amplitude of ictal events (with Two-sample Kolmogorov-Smirnov test (to see if two independent samples are from the same population))
    [h_KS_ps_amplitude,p_KS_ps_amplitude] = kstest2(ps_amplitude(control),ps_amplitude(drug));
    
    % Average amplitude of Pre-Ictal spike
    mean_ps_amplitude_control = mean (ps_amplitude(control));
    mean_ps_amplitude_drug = mean (ps_amplitude (drug));
    mean_ps_amplitude_collective = mean (ps_amplitude (collective));
    
%% Peak to Peak Amplitude of Ictal Events    

    % Comparing peak-to-peak amplitude of ictal events (with Two-sample Kolmogorov-Smirnov test (to see if two independent samples are from the same population))
    [h_KS_amplitude,p_KS_amplitude] = kstest2(ictal_event_amplitude(control),ictal_event_amplitude(drug));

    % Average peak-to-peak amplitude of Ictal Events
    mean_ictal_event_amplitude_control = mean (ictal_event_amplitude (control));
    mean_ictal_event_amplitude_drug = mean (ictal_event_amplitude (drug)) ;
    mean_ictal_event_amplitude_collective = mean (ictal_event_amplitude (collective));
    
%% Duration of Ictal Events

    % Comparing duration of Ictal Event (with 2-sample KS test)
 
     Aminopyrimidine = duration_raw (control); 
     Drug = duration_raw (drug);
     [h,p_duration] = kstest2(Aminopyrimidine,Drug);
     'h = 0 indicates that kstest does not reject the null hypothesis at the 5% significance level.';
     'The result h is 1 if the test rejects the null hypothesis at the 5% significance level, and 0 otherwise.';


    % Average Duration of Ictal Events

     Avg_IctalDuration_4AP_seconds = mean(Aminopyrimidine);
     Avg_IctalDuration_Drug_seconds = mean(Drug);
     Avg_IctalDuration_collective = mean (duration_raw(collective));

%% Interseizure Interval

    % Calculating the interseizure interval
    interseizure_interval=zeros(numel(SLE_onset)-1,1);

    for i=1:numel(SLE_onset)-1

    ISI=SLE_onset_raw(i+1)-SLE_onset_raw(i);
    interseizure_interval(i+1)=ISI;
    end
    
    % Comparing interseizure interval between control and drug conditions(with 2-sample KS test)
    [h_KS_ISI,p_KS_ISI] = kstest2(interseizure_interval(control(2:end)),interseizure_interval(drug(2:end)));

    % Average interseizure interval of Ictal Events
    mean_isi_control = mean (interseizure_interval (control(2:end)));
    mean_isi_drug = mean (interseizure_interval(drug(2:end))); 
    mean_isi_collective = mean (interseizure_interval(collective(2:end)));
              
%% Circular Variance and Plots of Ictal Event with photosimulation

  theta_Aminopyrimidine = theta(control);
  theta_Drug = theta (drug); 
  
  vtest_P_value_Aminopyrimidine=circ_vtest(theta_Aminopyrimidine,0);
  vtest_P_value_drug=circ_vtest(theta_Drug,0);
  
    FigE=figure;
    set(gcf,'Name','G. theta 4-Aminopyrimidine', 'NumberTitle', 'off');
    circ_plot(theta_Aminopyrimidine,'hist',[],50,true,true,'linewidth',2,'color','r');
    title ('Control Condition');
    
    FigF=figure;
    set(gcf,'Name','I. theta Hepes-Buffered ACSF','NumberTitle', 'off');
    circ_plot(theta_Drug,'hist',[],50,true,true,'linewidth',2,'color','r');
    title ('Drug Condition');

%% Amplitude of Light Response in LFP

    % Comparing amplitude of light response between control and drug conditions (with Two-sample Kolmogorov-Smirnov test)
    [h_KS_LR_amplitude,p_KS_LR_amplitude] = kstest2(light_response_amplitude(control_pulses),light_response_amplitude(drug_pulses));
    
    % Average amplitude of Light Response
    mean_LR_amplitude_control = mean (light_response_amplitude(control_pulses));
    n_pulses_control = numel(control_pulses);
    mean_LR_amplitude_drug = mean (light_response_amplitude(drug_pulses));
    n_pulses_drug = numel(drug_pulses);
    mean_LR_amplitude_collective = mean (light_response_amplitude (collective_pulses));
    

%% Calculating the % of ictal events that start with DC Shift

dcs=sum(DC_shift(collective))/numel(DC_shift(collective));
DC_shift_at_onset = dcs*100; %Percentage of DC Shift at onset of ictal events for this particular slice
PS_at_onset = 100-DC_shift_at_onset;        %Assumption that all other onset types are "preictal spikes"



%% Display results

p_wilcoxin

if any(p_wilcoxin > 0.05)
    disp(sprintf('Warning! Not safe to use these results! There is no difference between the line length of ictal events and baseline conditions dased on the Wilcoxin Signed Rank Test, p-value = %f', p_wilcoxin))
else 
    disp(sprintf('Success! Safe to use these results. Ictal event line length are significantly different from baseline conditions (they have increased in "intensity") based on the Wilcoxin Signed Rank Test, p-value = %f', p_wilcoxin))
end


disp ('CI. Does Normalized Point Distance change?')
p_KS_normalized
mean_normalized_control
n_control
mean_normalized_drug
n_drug 

if any (mean_normalized_drug > mean_normalized_control)
    C1='Increased';
else
    C1='Decreased';
end    

      FigA=figure;
      set(gcf,'Name','CI. Normalized Point Distance','NumberTitle', 'off')
      %set(gcf, 'Position', get(0,'Screensize')); % Maximize figure.
      D = [control(1:end),drug(1:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=normalized_point_distance(D);
      %plot(D,F, '.b')   
      scatter (control, normalized_point_distance(control), 'filled', 'black')
      hold on
      scatter(drug,normalized_point_distance(drug), 'filled', 'green')
      legend(sprintf(Control_Condition),sprintf(Tested_Condition))
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      plot(D,f,'--r')
      
      text(numel(D)/2,p(1,2)+.2, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)+.1, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Normalized Point Distance')
      xlabel ('Ictal Event #')
      ylabel ('Normalized Point Distance (Pts/s)')
      

if any(p_KS_normalized >= 0.05)
    disp(sprintf('CI. No. Accept Null Hypothesis. There is no difference in normalized point distance ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', mean_normalized_control, n_control, mean_normalized_drug, n_drug, p_KS_normalized))
else 
    disp(sprintf('CI. Yes. %s. Reject Null Hypothesis. There is a difference in normalized point distance ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', C1, mean_normalized_control, n_control, mean_normalized_drug, n_drug, p_KS_normalized))
end

disp ('CII. Does Normalized Line Length change?')
p_KS_normalized_line_length
mean_normalized_line_length_control
n_control
mean_normalized_line_length_drug
n_drug 

      FigB=figure;
      set(gcf,'Name','CII. Normalized Line Length ("Intensity")','NumberTitle', 'off')
      D = [control(1:end),drug(1:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=normalized_line_length(D);
      %plot(D,F, '.b')
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      hold on
      scatter (control, normalized_line_length(control), 'filled', 'black')
      scatter(drug,normalized_line_length(drug), 'filled', 'green')
      legend(sprintf(Control_Condition), sprintf(Tested_Condition), 'Location', 'southeast')
      plot(D,f,'--r')

      text(numel(D)/2,p(1,2)+.2, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)+.1, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Normalized Line Length')
      xlabel ('Ictal Event #')
      ylabel ('Normalized Line Length (mV/s)')

if any(p_KS_normalized_line_length >= 0.05)
    disp(sprintf('CII. No. Accept Null Hypothesis. There is no difference in normalized line length ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', mean_normalized_line_length_control, n_control, mean_normalized_line_length_drug, n_drug, p_KS_normalized_line_length))
else 
    disp(sprintf('CII. Yes. Reject Null Hypothesis. There is a difference in normalized line length ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', mean_normalized_line_length_control, n_control, mean_normalized_line_length_drug, n_drug, p_KS_normalized_line_length))
end


disp ('D. Does amplitude of preictal spike change?')

p_KS_ps_amplitude
mean_ps_amplitude_control
n_control
mean_ps_amplitude_drug
n_drug 

if any (mean_ps_amplitude_drug > mean_ps_amplitude_control)
    E1='Increased';
else
    E1='Decreased';
end    

      FigPS=figure;
      set(gcf,'Name', 'D. Amplitude of Preictal Spike','NumberTitle', 'off')
      D = [control(1:end),drug(1:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=ps_amplitude(D);
      %plot(D,F, '.b')
      scatter (control, ps_amplitude(control), 'filled', 'black')
      hold on
      scatter(drug,ps_amplitude(drug), 'filled', 'green')
      legend(sprintf(Control_Condition),sprintf(Tested_Condition))
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      plot(D,f,'--r')


      text(numel(D)/2,p(1,2)-.2, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)-.1, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Amplitude of Preictal Spike')
      xlabel ('Ictal Event #')
      ylabel ('Amplitude of Preictal Spike (mV)')
      
if any(p_KS_ps_amplitude >= 0.05)
    disp(sprintf('D. No. Accept Null Hypothesis. There is no difference in amplitude of preictal spike between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ps_amplitude_control, n_control, mean_ps_amplitude_drug, n_drug, p_KS_ps_amplitude))
else 
    disp(sprintf('D. Yes. %s. Reject Null Hypothesis. There is a difference in amplitude of preictal spike between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        E1, mean_ps_amplitude_control, n_control, mean_ps_amplitude_drug, n_drug, p_KS_ps_amplitude))
end


disp ('E. Does Seizure Duration change?')

p_duration
Avg_IctalDuration_4AP_seconds
n_control
Avg_IctalDuration_Drug_seconds
n_drug 

if any(Avg_IctalDuration_Drug_seconds > Avg_IctalDuration_4AP_seconds)
    G1 = 'Increased';
else
    G1 = 'Decreased';
end

      FigC=figure;
      set(gcf,'Name', 'E. Ictal Event Duration','NumberTitle', 'off')
      D = [control(1:end),drug(1:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=duration_raw(D);
      %plot(D,F, '.b')
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      hold on
      scatter (control, duration_raw(control), 'filled', 'black')
      scatter(drug,duration_raw(drug), 'filled', 'green')
      legend(sprintf(Control_Condition),sprintf(Tested_Condition), 'Location', 'southeast')
      plot(D,f,'--r')

      text(numel(D)/2,p(1,2)+20, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)+10, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Ictal Event Duration')
      xlabel ('Ictal Event #')
      ylabel ('Ictal event Duration (s)')

if any(ge(p_duration,0.05))
    disp(sprintf('E. No. Accept Null Hypothesis. There is no difference in duration between between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', Avg_IctalDuration_4AP_seconds, n_control, Avg_IctalDuration_Drug_seconds, n_drug, p_duration))
else 
    disp(sprintf('E. Yes. %s. Reject Null Hypothesis. There is a difference in duration between ictal events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f', G1, Avg_IctalDuration_4AP_seconds, n_control, Avg_IctalDuration_Drug_seconds, n_drug, p_duration))
end


disp ('F. Does Peak-to-Peak Amplitude of Ictal Events change?')

p_KS_amplitude
mean_ictal_event_amplitude_control 
n_control
mean_ictal_event_amplitude_drug 
n_drug 

      FigD=figure;
      set(gcf,'Name', 'F. Peak to Peak Amplitude of Ictal Event','NumberTitle', 'off')
      D = [control(1:end),drug(1:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=ictal_event_amplitude(D);
      %plot(D,F, '.b')
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      hold on
      scatter (control, ictal_event_amplitude(control), 'filled', 'black')
      scatter(drug,ictal_event_amplitude(drug), 'filled', 'green')
      legend(sprintf(Control_Condition),sprintf(Tested_Condition), 'Location', 'southeast')
      plot(D,f,'--r')
       
      text(numel(D)/2,p(1,2)+.2, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)+.1, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Peak to Peak Amplitude of Ictal Events')
      xlabel ('Ictal Event #')
      ylabel ('Amplitude (mV)')

if any(p_KS_amplitude >= 0.05)
    disp(sprintf('F. No. Accept Null Hypothesis. There is no difference in Peak-to-Peak Amplitude of Ictal Events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ictal_event_amplitude_control, n_control, mean_ictal_event_amplitude_drug, n_drug, p_KS_amplitude))
else 
    disp(sprintf('F. Yes. Reject Null Hypothesis. There is a difference in Peak-to-Peak Amplitude of Ictal Events in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ictal_event_amplitude_control, n_control, mean_ictal_event_amplitude_drug, n_drug, p_KS_amplitude))
end


disp ('G. Does the Interseizure Interval change?')

p_KS_ISI
mean_isi_control
n_isi_control
mean_isi_drug
n_isi_drug

if (mean_isi_drug > mean_isi_control)
    I1 = 'Increased';
else
    I1 = 'Decreased';
end
    
      FigG=figure;
      set(gcf,'Name', 'G. Interseizure Interval','NumberTitle', 'off')
      D = [control(2:end),drug(2:end)];
      DD=D'; %Transpose vector
      D=DD; %transpose vector
      F=interseizure_interval(D);
      %plot(D,F, '.b')
      p = polyfit(D,F,1);
      f = polyval(p,D);
      R = corrcoef (D,F);
      hold on
      scatter (control(2:end), interseizure_interval(control(2:end)), 'filled', 'black')
      scatter(drug(2:end),interseizure_interval(drug(2:end)), 'filled', 'green')
      legend(sprintf(Control_Condition),sprintf(Tested_Condition), 'Location', 'southeast')
      plot(D,f,'--r')
       
      text(numel(D)/2,p(1,2)-150, sprintf('R = %f', R(1,2)));
      text(numel(D)/2,p(1,2)-200, sprintf('Y = m(%f) +%f', p(1,1), p(1,2)));
      
      title ('Interseizure Interval')
      xlabel ('Ictal Event #')
      ylabel ('Interseizure Interval (s)')

if any(p_KS_ISI >= 0.05)
    disp(sprintf('G. No. Accept Null Hypothesis. There is no difference between interseizure interval in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_isi_control, n_isi_control, mean_isi_drug, n_isi_drug, p_KS_ISI))
else 
    disp(sprintf('G. Yes. %s. Reject Null Hypothesis. There is a difference between interseizure interval in control (%.2f pts/s, n=%.f) and drug (%.4f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        I1, mean_isi_control, n_control, mean_isi_drug, n_drug, p_KS_ISI))
end



disp ('H. Was light correlated?')
vtest_P_value_Aminopyrimidine 

if any(vtest_P_value_Aminopyrimidine >= 0.05)
    disp(sprintf('H. No. Accept Null Hypoethesis. There is uniform distribute of theta in control conditions based on the circ_vtest, p-value = %f', vtest_P_value_Aminopyrimidine))
else 
    disp(sprintf('H. Yes. Reject Null Hypothesis. There is a concentrated distribution of theta towards a mean direction of 0 rads based on the circ_vtest, p-value = %f', vtest_P_value_Aminopyrimidine'))
end



disp ('I. Does light remain correlated?')
vtest_P_value_drug
    
if any(vtest_P_value_drug >= 0.05)
    disp(sprintf('I. No. Accept Null Hypoethesis. There is uniform distribute of theta in drug conditions based on the circ_vtest, p-value = %f', vtest_P_value_drug))
else 
    disp(sprintf('I. Yes. Reject Null Hypothesis. There is a concentrated distribution of theta towards a mean direction of 0 rads based on the circ_vtest, p-value = %f', vtest_P_value_drug))
end

disp ('J. Does the light response change?')
p_KS_LR_amplitude
mean_LR_amplitude_control 
n_pulses_control
mean_LR_amplitude_drug 
n_pulses_drug
    
if (mean_LR_amplitude_drug > mean_LR_amplitude_control )
    J1 = 'Increased';
else
    J1 = 'Decreased';
end

%Control Condition
avg_light_response_control = mean (light_response_onset_original(control_pulses,:));
avg_light_pulse_control = mean (light_pulse_original(control_pulses,:));
avg_light_pulse_control_adj = avg_light_pulse_control(1,:)-max(avg_light_pulse_control); 

%Drug Condition
avg_light_response_drug = mean (light_response_onset_original(drug_pulses,:));
avg_light_pulse_drug = mean (light_pulse_original(drug_pulses,:));
%avg_light_pulse_drug_adj = avg_light_pulse_drug(1,:)-4; 

FigH=figure;
set(gcf,'NumberTitle','off'); %don't show the figure number
set(gcf,'Name','Average light response of tissue, adjusted light pulse'); %select the name you want
plot (t (1:5000), avg_light_response_control, 'k');
hold on
plot (t(1:5000), avg_light_response_drug, 'r');
plot (t(1:5000), avg_light_pulse_control_adj, 'b');
ylim ([-0.5,1.5]);
legend (sprintf(Control_Condition), sprintf(Tested_Condition))
title ('Average light response in Control Conditions');
ylabel ('LFP (mV)');
xlabel ('time (s)');

if any(p_KS_LR_amplitude >= 0.05)
    disp(sprintf('J. No. Accept Null Hypoethesis. There is no difference in the light response amplitude between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_LR_amplitude_control, n_pulses_control, mean_LR_amplitude_drug, n_pulses_drug, p_KS_LR_amplitude))
else 
    disp(sprintf('J. Yes. %s. Reject Null Hypothesis. There is a difference in the light response amplitude between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        J1, mean_LR_amplitude_control, n_pulses_control, mean_LR_amplitude_drug, n_pulses_drug, p_KS_LR_amplitude))
end


%% Export analysis to Power Point

exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to Ictal Event Characteristics', 'Position',[0 0 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 24);
    
         %Wilcoxin Signed-Rank Results
if any(p_wilcoxin > 0.05)
    exportToPPTX('addtext', sprintf('Warning! Not safe to use these results! There is no difference between the line length of ictal events and baseline conditions dased on the Wilcoxin Signed Rank Test, p-value = %f',...
        p_wilcoxin), 'Position',[0 1 12 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14)
else 
    exportToPPTX('addtext', sprintf('Success! Safe to use these results. Ictal event line length are significantly different from baseline conditions (they have increased in "intensity") based on the Wilcoxin Signed Rank Test, p-value = %f',...
        p_wilcoxin), 'Position',[0 1 12 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

exportToPPTX('addtext', sprintf('%.f%% of the slices initiated ictal events with a DC shift', DC_shift_at_onset), 'Position',[0 2 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
         
exportToPPTX('addtext', sprintf('%.f%% of the slices initiated ictal events with a Preictal Spike', PS_at_onset), 'Position',[0 3 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);

%Normalized Point Distance results

exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to Normalized Point Distance of Ictal Event', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
         
exportToPPTX('addtext', 'CI. Does Normalized Point Distance change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);

if any(p_KS_normalized >= 0.05)
    exportToPPTX('addtext', sprintf('CI. No. Accept Null Hypothesis. There is no difference in normalized point distance ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.2f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_normalized_control, n_control, mean_normalized_drug, n_drug, p_KS_normalized), 'Position',[.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);    
else 
    exportToPPTX('addtext', sprintf('CI. Yes. %s. Reject Null Hypothesis. There is a difference in normalized point distance ("intensity") between ictal events in control (%.2f pts/s, n=%.f) and drug (%.2f pts/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        C1, mean_normalized_control, n_control, mean_normalized_drug, n_drug, p_KS_normalized), 'Position',[.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end
   
  exportToPPTX('addpicture',FigA, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigA)

  
%Normalized Line Length Results

exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to Normalized Line Length of Ictal Event.', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'CII. Does Normalized Line Length change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);

         
if any(p_KS_normalized_line_length >= 0.05)
    exportToPPTX('addtext', sprintf('CII. No. Accept Null Hypothesis. There is no difference in normalized line length ("intensity") between ictal events in control (%.2f mV/s, n=%.f) and drug (%.2f mV/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_normalized_line_length_control, n_control, mean_normalized_line_length_drug, n_drug, p_KS_normalized_line_length), 'Position',[.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
else 
    exportToPPTX('addtext', sprintf('CII. Yes. Reject Null Hypothesis. There is a difference in normalized line length ("intensity") between ictal events in control (%.2f mV/s, n=%.f) and drug (%.2f mV/s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_normalized_line_length_control, n_control, mean_normalized_line_length_drug, n_drug, p_KS_normalized_line_length), 'Position',[.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

  exportToPPTX('addpicture',FigB, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigB)


%Amplitude of Preictal Spikes
exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to amplitude of the preictal spike', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'D. Does amplitude of the preictal spike preceeding ictal events change?', 'Position',[0.5 1 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
       

if any(p_KS_ps_amplitude >= 0.05)
    exportToPPTX('addtext', sprintf('D. No. Accept Null Hypothesis. There is no difference in amplitude of preictal spike between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ps_amplitude_control, n_control, mean_ps_amplitude_drug, n_drug, p_KS_ps_amplitude), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
else 
    exportToPPTX('addtext', sprintf('D. Yes. %s. Reject Null Hypothesis. There is a difference in amplitude of preictal spike between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        E1, mean_ps_amplitude_control, n_control, mean_ps_amplitude_drug, n_drug, p_KS_ps_amplitude), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

  exportToPPTX('addpicture',FigPS, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigPS)
  
  
%Duration of ictal events results
exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to Ictal Event Duration', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'E. Does Seizure Duration change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
       

if any(ge(p_duration,0.05))
    exportToPPTX('addtext', sprintf('E. No. Accept Null Hypothesis. There is no difference in duration between between ictal events in control (%.1f s, n=%.f) and drug (%.1f s, n=%.f) conditions based on the KS Test, p-value = %f',...
        Avg_IctalDuration_4AP_seconds, n_control, Avg_IctalDuration_Drug_seconds,...
        n_drug, p_duration), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
else 
    exportToPPTX('addtext', sprintf('E. Yes. %s. Reject Null Hypothesis. There is a difference in duration between ictal events in control (%.1f s, n=%.f) and drug (%.1f s, n=%.f) conditions based on the KS Test, p-value = %f',...
        G1, Avg_IctalDuration_4AP_seconds, n_control, Avg_IctalDuration_Drug_seconds,...
        n_drug, p_duration), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

  exportToPPTX('addpicture',FigC, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigC)
  
  
%Peak to Peak Amplitude results
exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to Peak to Peak Amplitude of Ictal Event', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'F. Does Peak to Peak amplitude of ictal events change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
       

if any(p_KS_amplitude >= 0.05)
    exportToPPTX('addtext', sprintf('F. No. Accept Null Hypothesis. There is no difference in Peak-to-Peak Amplitude of Ictal Events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ictal_event_amplitude_control, n_control, mean_ictal_event_amplitude_drug, n_drug, p_KS_amplitude), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
else 
    exportToPPTX('addtext', sprintf('F. Yes. Reject Null Hypothesis. There is a difference in Peak-to-Peak Amplitude of Ictal Events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_ictal_event_amplitude_control, n_control, mean_ictal_event_amplitude_drug, n_drug, p_KS_amplitude), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

  exportToPPTX('addpicture',FigD, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigD)

  
%Interseizure Interval results
exportToPPTX('addslide');
exportToPPTX('addtext', 'Summary of changes to the Interseizure Interval', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'G. Does the Interseizure Interval change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
       

if any(p_KS_ISI >= 0.05)
    exportToPPTX('addtext', sprintf('G. No. Accept Null Hypothesis. There is no difference between interseizure interval in control (%.1f s, n=%.f) and drug (%.1f s, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_isi_control, n_isi_control, mean_isi_drug, n_isi_drug, p_KS_ISI), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
else 
    exportToPPTX('addtext', sprintf('G. Yes. %s. Reject Null Hypothesis. There is a difference between interseizure interval in control (%.1f s, n=%.f) and drug (%.1f s, n=%.f) conditions based on the KS Test, p-value = %f',...
        I1, mean_isi_control, n_isi_control, mean_isi_drug, n_isi_drug, p_KS_ISI), 'Position',[0.5 4 4 1], 'Horiz','left', 'Vert','middle', 'FontSize', 14);
end

  exportToPPTX('addpicture',FigG, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigG)
  
  
  
  
%Light-SLE onset correlation in control condition  
       
exportToPPTX('addslide');
exportToPPTX('addtext', 'Circ_VTest in Control Condition', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'G. Is light correlated to the seizure onset?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);

if any(vtest_P_value_Aminopyrimidine >= 0.05)
exportToPPTX('addtext', sprintf('H. No. Accept Null Hypoethesis. There is uniform distribute of theta in control conditions based on the circ_vtest, p-value = %f', vtest_P_value_Aminopyrimidine), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);    
else 
    exportToPPTX('addtext', sprintf('H. Yes. Reject Null Hypothesis. There is a concentrated distribution of theta towards a mean direction of 0 rads based on the circ_vtest, p-value = %f', vtest_P_value_Aminopyrimidine'), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);   
end
            
  exportToPPTX('addpicture',FigE, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigE)         

  
%Light-SLE onset correlation in drug condition    
  
exportToPPTX('addslide');
exportToPPTX('addtext', 'Circ_VTest in Drug Condition', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'I. Does light remain correlated to the seizure onset?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
         
if any(vtest_P_value_drug >= 0.05)
exportToPPTX('addtext', sprintf('I. No. Accept Null Hypoethesis. There is uniform distribute of theta in drug conditions based on the circ_vtest, p-value = %f', vtest_P_value_drug), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);    
else 
    exportToPPTX('addtext', sprintf('I. Yes. Reject Null Hypothesis. There is a concentrated distribution of theta towards a mean direction of 0 rads based on the circ_vtest, p-value = %f', vtest_P_value_drug), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);   
end
            
  exportToPPTX('addpicture',FigF, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigF)


%Light Response in LFP   
  
exportToPPTX('addslide');
exportToPPTX('addtext', 'Light Response in LFP under control (4-AP) and test conditions', 'Position',[0 0 12 1],...
             'FontWeight', 'bold', 'Horiz','left', 'Vert','middle', 'FontSize', 24);
exportToPPTX('addtext', 'J. Does the light response change?', 'Position',[0.5 1 12 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);
         
if any(p_KS_LR_amplitude >= 0.05)
exportToPPTX('addtext', sprintf('J. No. Accept Null Hypoethesis. There is no difference in the light response amplitude between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        mean_LR_amplitude_control, n_pulses_control, mean_LR_amplitude_drug, n_pulses_drug, p_KS_LR_amplitude), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);    
else 
    exportToPPTX('addtext', sprintf('J. Yes. %s. Reject Null Hypothesis. There is a difference in the light response amplitude between ictal events in control (%.2f mV, n=%.f) and drug (%.2f mV, n=%.f) conditions based on the KS Test, p-value = %f',...
        J1, mean_LR_amplitude_control, n_pulses_control, mean_LR_amplitude_drug, n_pulses_drug, p_KS_LR_amplitude), 'Position',[0.5 4 4 1],...
             'Horiz','left', 'Vert','middle', 'FontSize', 14);   
end
            
  exportToPPTX('addpicture',FigH, 'Position',[6 1.5 5 4], 'Scale',0.6);      
  close(FigH)
  
  
%% save and close the .PPTX
newFile = exportToPPTX('saveandclose',sprintf(excel_filename)); % move this line further down when you have completed export of data

%% Write to xls
%Sheet 1 = summary (of p-values)

A=sprintf(excel_filename);

B=sprintf(Tested_Condition);


if any(p_KS_normalized >= 0.05)
    C='No';
else 
    C=sprintf('Yes. %s', C1);
end

D=p_KS_normalized;


if any(p_KS_ps_amplitude >= 0.05)
    E='No';
else 
    E=sprintf('Yes. %s', E1);
end

F=p_KS_ps_amplitude;


if any(p_duration >= 0.05)
    G='No';
else 
    G=sprintf('Yes. %s', G1);
end

H=p_duration;


if any(p_KS_ISI >= 0.05)
    I='No';
else 
    I=sprintf('Yes. %s', I1)
end

J = p_KS_ISI;


if any(vtest_P_value_Aminopyrimidine >= 0.05)
    K='No';
else 
    K='Yes';
end

L = vtest_P_value_Aminopyrimidine;


if any(vtest_P_value_drug >= 0.05)
    M='No';
else 
    M='Yes';
end

N = vtest_P_value_drug;

sheet1 = {A,B,C,D,E,F,G,H,I,J,K,L,M,N};
xlswrite(sprintf(excel_write_to),sheet1,'Summary' ,sprintf(Slice));


%Sheet 2 = averages
AA = mean_normalized_collective;
BB = mean_ps_amplitude_collective;
CC = mean_ictal_event_amplitude_collective;
DD = Avg_IctalDuration_collective;
EE = mean_isi_collective;
FF = n_collective; 
GG = DC_shift_at_onset; 
HH = PS_at_onset; 
II = mean_LR_amplitude_collective
JJ = numel(collective_pulses)

sheet2 = {A, B, AA,BB,CC,DD,EE,FF,GG,HH,II,JJ};
xlswrite(sprintf(excel_write_to),sheet2,'Averages' ,sprintf(Slice));

%Sheet 3 = Ictal Event Intensity

sheet3 = {p_KS_normalized, mean_normalized_control, mean_normalized_drug, p_KS_normalized_line_length, mean_normalized_line_length_control,...
mean_normalized_line_length_drug};
xlswrite(sprintf(excel_write_to),sheet3,'intensity' ,sprintf(Slice));


'success; complete!'
