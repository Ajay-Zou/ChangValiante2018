%%Template Matching using convolution | By: Michael Chang and Kramay Patel
%This function searches for spikes (template) in the Time Series that has
%been high pass filtered to remove any DC shift.


%Time Series
timeSeries = LFP;

figure;
plot(timeSeries)
axis tight
title ('Time Series')

%Make High-Pass Filter
[b,a] = butter(4, 0.5/(10000/2), 'high');   %Highpass Filter 0.5 Hz

%Filter Time Series
LFP_highpass = filtfilt(b,a,LFP);

figure;
plot(LFP_highpass)
axis tight
title ('Time Series high pass filtered')

%A template is given
template = LFP_highpass(175700:178700);

figure;
plot(template)
axis tight
title ('Template')

%Convolution | template matching
w = conv(LFP_highpass,template, 'same');

figure;
plot(t, w)
axis tight
title ('Convolution Output')

    % Create a matched filter based on the template
    b = template;

    % For testing the matched filter, create a random signal which
    % contains a match for the template at some time index
    % x = [randn(200,1); template(:); randn(300,1)];
    x = LFP(1:300000);
    n = 1:length(x);

    figure;
    plot(x)
    axis tight
    title ('Time Series Signal')

    % Process the signal with the matched filter
    y = filter(b,1,x);

% Set a detection threshold (exmaple used is 90% of template)
thresh = .9;

% Compute normalizing factor
u = template.'*template;

% Find matches
%matches = n(y>thresh*u);
n = 1:length(timeSeries);
matches = n(w>thresh*u);


% Plot the results
figure;
plot(t,w,'b')
hold on
plot(t(matches), w(matches), 'ro');
axis tight
title ('Detected spikes from Template Matching')

% Print the results to the console
% display(matches);

%% Dealing with IISs
spikes2 = SLECrawler(LFP_highpass, IIS, frequency, LED, onsetDelay, 0, locs_spike_2nd, 1, 1, 4);  

%% Analyze the detected Spikes 
timeSeries = LFP_detrended;
uniqueTitle = 'LFP_detrended'

 %% Creating powerpoint slide
    isOpen  = exportToPPTX();
    if ~isempty(isOpen),
        % If PowerPoint already started, then close first and then open a new one
        exportToPPTX('close');
    end
    exportToPPTX('new','Dimensions',[12 6], ...
        'Title','Epileptiform Event Detector V4.0', ...
        'Author','Michael Chang', ...
        'Subject','Automatically generated PPTX file', ...
        'Comments','This file has been automatically generated by exportToPPTX');
    %Add New Slide
    exportToPPTX('addslide');
    exportToPPTX('addtext', 'Troubleshooting: Epileptiform Events detected', 'Position',[2 1 8 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 36);
    exportToPPTX('addtext', sprintf('File: %s', FileName), 'Position',[3 3 6 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 20);
    exportToPPTX('addtext', 'By: Michael Chang and Christopher Lucasius', 'Position',[4 4 4 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 20);     
    %Add New Slide
    exportToPPTX('addslide');
    exportToPPTX('addtext', 'Legend', 'Position',[0 0 4 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 24);
    exportToPPTX('addtext', 'Epileptiform spike is average + 3.9*SD of the baseline', 'Position',[0 1 6 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'Artifacts are average + 100*SD', 'Position',[0 2 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'SLE onset is the first peak in power (minimum 1/3 of the max amplitude spike)', 'Position',[0 3 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'SLE offset is when power returns below baseline/2', 'Position',[0 4 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'Note: The event have only been shifted alone the y-axis to start at position 0', 'Position',[0 5 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 16);          

for i = 1:numel(spikes(:,1))
    
    %Create all the vectors
    startTime = int64((spikes(i,1))*frequency);
    endTime = int64((spikes(i,2))*frequency);

    contextStartTime = int64((spikes(i,1)-0.1)*frequency);
    contextEndTime = int64((spikes(i,2)+3)*frequency);
    
%     %Plot all the IIS spikes detected
%     figHandle = figure;
%     plot(t(contextStartTime:contextEndTime), timeSeries(contextStartTime:contextEndTime))
%     hold on
%     plot(t(startTime:endTime), timeSeries(startTime:endTime))
%     axis tight
%     title (sprintf('Spike #%d',i))        
%     
%      %Export figures to .pptx
%     exportToPPTX('addslide'); %Draw seizure figure on new powerpoint slide
%     exportToPPTX('addpicture',figHandle);      
%     close(figHandle)
    
    %Characterize the spikes
    vectorSpike = timeSeries(contextStartTime:contextEndTime);
    
    %derivative
%     figure;
%     subplot (2,1,1)
%     plot(vectorSpike)
%     subplot (2,1,2)
%     plot(diff(vectorSpike))
    spikes(i,5) = max(diff(vectorSpike));
       
    %amplitude
    spikes(i,6) = max(vectorSpike)-min(vectorSpike);
            
    %integral
    spikes(i,7) = trapz(vectorSpike)
    
    %duration
    
    
end

 % save and close the .PPTX
exportToPPTX('saveandclose',sprintf('%s%s', excelFileName, uniqueTitle)); 

        
% template = LFP_detrended(175700:178700);

%Characterize the spikes




