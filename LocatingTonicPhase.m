%% locating tonic-like and clonic-like firing
% for i = indexSLE
%     [tonicPhase, spikeFrequency{i}] = findIctalPhases (spikeFrequency{i});
% end

  %% Creating powerpoint slide
    isOpen  = exportToPPTX();
    if ~isempty(isOpen),
        % If PowerPoint already started, then close first and then open a new one
        exportToPPTX('close');
    end

    exportToPPTX('new','Dimensions',[12 6], ...
        'Title','Characterize Ictal Events', ...
        'Author','Michael Chang', ...
        'Subject','Automatically generated PPTX file', ...
        'Comments','This file has been automatically generated by exportToPPTX');

    exportToPPTX('addslide');
    exportToPPTX('addtext', 'Detecting the tonic-like firing period', 'Position',[2 1 8 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 36);
    exportToPPTX('addtext', sprintf('File: %s', FileName), 'Position',[3 3 6 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 20);
    exportToPPTX('addtext', 'By: Michael Chang and Christopher Lucasius', 'Position',[4 4 4 2],...
                 'Horiz','center', 'Vert','middle', 'FontSize', 20);     

    exportToPPTX('addslide');
    exportToPPTX('addtext', 'Legend', 'Position',[0 0 4 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 24);
    exportToPPTX('addtext', 'Epileptiform spike is average + 6*SD of the baseline', 'Position',[0 1 6 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'Artifacts are average + 100*SD', 'Position',[0 2 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'SLE onset is the first peak in power (minimum 1/3 of the max amplitude spike)', 'Position',[0 3 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'SLE offset is when power returns below baseline/2', 'Position',[0 4 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 14);
    exportToPPTX('addtext', 'Note: The event have only been shifted alone the y-axis to start at position 0', 'Position',[0 5 5 1],...
                 'Horiz','left', 'Vert','middle', 'FontSize', 16);    
             
  %% Using Michael's Threshold    
  
  [index, value] = find(indexSLE>0)
    for i = index'
  %locate putatitve tonic phase
    maxFrequency = double(max(spikeFrequency{i}(:,2)));    %Calculate the maximum frequency         
    indexTonic = spikeFrequency{i}(:,2) > maxFrequency/3; %Locate putative Tonic Phase    
    spikeFrequency{i}(:,3) = indexTonic;
    
    %locate contingous segments above threshold    
    for j = 2: numel (indexTonic)
        if indexTonic(j) > 0 && indexTonic(j+1) > 0                        
            startTonicTime = spikeFrequency{i}(j);
            while indexTonic(j) > 0
                j = j+1;
            end            
            endTonicTime = spikeFrequency{i}(j-1);
            break
        end
    end          
    
    tonicPhase (1,1) = startTonicTime;
    tonicPhase (1,2) = endTonicTime;
    
    %% Using k-means clustering (algo threshold)
    k = 3;
    featureSet = spikeFrequency{i}(:,2);
    indexFrequencyAlgo = kmeans(featureSet, k);
    spikeFrequency{i}(:,4) = indexFrequencyAlgo; 
    
% %     %locate contingous segments above threshold    
%     for i = 2: numel (indexTonic)
%         if indexTonic(i) > 0 && indexTonic(i+1) > 0                        
%             startTonicTime = spikeFrequency{i}(i);
%             while indexTonic(i) > 0
%                 i = i+1;
%             end            
%             endTonicTime = spikeFrequency{i}(i-1);
%             break
%         end
%     end       
    
    %Plot Figure
    figHandle = figure;
    set(gcf,'NumberTitle','off', 'color', 'w'); %don't show the figure number
    set(gcf,'Name', sprintf ('Frequency Feature Set, Epileptiform Event #%d', i)); %select the name you want
    set(gcf, 'Position', get(0, 'Screensize')); 

    subplot (2,1,1)
    figHandle = plotEvent (figHandle, LFP_centered, t, events(i,1:2), locs_spike_2nd, lightpulse);        
    %Labels
    title (sprintf('Epileptiform Event #%d, Michaels Threshold', i));
    ylabel ('mV');
    xlabel ('Time (sec)');   
    %Plot Frequency Feature
    yyaxis right
    
    activeIndex = spikeFrequency{i}(:,3) == 1;
    inactiveIndex = spikeFrequency{i}(:,3) == 0;
    
    plot (spikeFrequency{i}(:,1)/frequency, spikeFrequency{i}(:,2), 'o', 'MarkerFaceColor', 'cyan')
    
    plot (spikeFrequency{i}(inactiveIndex ,1)/frequency, spikeFrequency{i}(inactiveIndex ,2), 'o', 'MarkerFaceColor', 'magenta')
    plot (spikeFrequency{i}(inactiveIndex ,1)/frequency, spikeFrequency{i}(inactiveIndex ,2), 'o', 'color', 'k')
    
    plot ([startTonicTime/frequency startTonicTime/frequency], ylim)
    plot ([endTonicTime/frequency endTonicTime/frequency], ylim)
    
    ylabel ('Spike rate/second (Hz)');
    set(gca,'fontsize',14)
    legend ('LFP filtered', 'Epileptiform Event', 'Detected Onset', 'Detected Offset', 'Detected Spikes', 'Applied Stimulus', 'Frequency above threshold', 'Frequency below threshold')
    legend ('Location', 'northeastoutside')

    
    subplot (2,1,2)    
    figHandle = plotEvent (figHandle, LFP_centered, t, events(i,1:2), locs_spike_2nd, lightpulse);        
    %Labels
    title ('Algo Threshold (K-means clustering)');
    ylabel ('mV');
    xlabel ('Time (sec)');   
    %Plot Frequency Feature
    yyaxis right
    
    bottomIndex = spikeFrequency{i}(:,4) == 3;
    middleIndex = spikeFrequency{i}(:,4) == 2;
    topIndex = spikeFrequency{i}(:,4) == 1;
        
    plot (spikeFrequency{i}(:,1)/frequency, spikeFrequency{i}(:,2), 'o', 'MarkerFaceColor', 'cyan')    
    plot (spikeFrequency{i}(middleIndex ,1)/frequency, spikeFrequency{i}(middleIndex ,2), 'o', 'MarkerFaceColor', 'yellow')    
    plot (spikeFrequency{i}(bottomIndex ,1)/frequency, spikeFrequency{i}(bottomIndex ,2), 'o', 'MarkerFaceColor', 'magenta')
    plot (spikeFrequency{i}(:,1)/frequency, spikeFrequency{i}(:,2), 'o', 'color', 'k')
    
    ylabel ('Spike rate/second (Hz)');
    set(gca,'fontsize',14)
    legend ('LFP filtered', 'Epileptiform Event', 'Detected Onset', 'Detected Offset', 'Detected Spikes', 'Applied Stimulus', 'Frequency - Gp1', 'Frequency - Gp2', 'Frequency - Gp3')
    legend ('Location', 'northeastoutside')

    %Export figures to .pptx
    exportToPPTX('addslide'); %Draw seizure figure on new powerpoint slide
    exportToPPTX('addpicture',figHandle);      
    close(figHandle)
    end

    
    % save and close the .PPTX
    exportToPPTX('saveandclose',sprintf('%s(tonic phase)', excelFileName)); 


